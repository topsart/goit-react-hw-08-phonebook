{"version":3,"sources":["components/Container/Container.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/UserMenu/UserMenu.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css"],"names":["Container","children","className","styles","connect","state","isAuthenticated","authSelectors","getIsAuthenticated","nav","to","exact","link","activeClassName","activeLink","Typography","variant","mapDispatchToProps","onLogout","authOperations","logOut","name","getUsername","avatar","defaultAvatar","container","src","alt","width","Button","type","color","onClick","AuthNav","position","AppBar","Toolbar","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","path","getCurrentUser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","createReducer","authActions","_","payload","token","setError","error","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logIn","getState","persistedToken","get","module","exports","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","addContact","number","contact","then","catch","deleteContact","contactId","delete","fetchContacts","getFilter","filter","getFilteredContacts","createSelector","items","normalizedFilter","toLowerCase","includes","id"],"mappings":"iSAOeA,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAOH,UAAvB,SAAmCC,K,kCC+BtBG,eAJS,SAAAC,GAAK,MAAK,CAChCC,gBAAiBC,IAAcC,mBAAmBH,MAGrCD,EA5BI,SAAC,GAAD,IAAGE,EAAH,EAAGA,gBAAH,OACjB,sBAAKJ,UAAWC,IAAOM,IAAvB,UACE,cAAC,IAAD,CACEC,GAAG,IACHC,OAAK,EACLT,UAAWC,IAAOS,KAClBC,gBAAiBV,IAAOW,WAJ1B,SAME,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,oBAGDV,GACC,cAAC,IAAD,CACEI,GAAG,YACHC,OAAK,EACLT,UAAWC,IAAOS,KAClBC,gBAAiBV,IAAOW,WAJ1B,SAME,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,8BCzBO,MAA0B,2C,0BC2BnCC,EAAqB,CACzBC,SAAUC,IAAeC,QAGZhB,eATS,SAAAC,GAAK,MAAK,CAChCgB,KAAMd,IAAce,YAAYjB,GAChCkB,OAAQC,KAO8BP,EAAzBb,EAxBE,SAAC,GAAD,IAAGmB,EAAH,EAAGA,OAAQF,EAAX,EAAWA,KAAMH,EAAjB,EAAiBA,SAAjB,OACf,sBAAKhB,UAAWC,IAAOsB,UAAvB,UACE,qBAAKC,IAAKH,EAAQI,IAAI,GAAGC,MAAM,KAAK1B,UAAWC,IAAOoB,SACtD,uBAAMrB,UAAWC,IAAOkB,KAAxB,sBAAwCA,KACxC,cAACQ,EAAA,EAAD,CACEC,KAAK,SACLd,QAAQ,YACRe,MAAM,UACNC,QAASd,EAJX,0B,iBCeWe,EArBC,kBACd,gCACE,cAAC,IAAD,CACEvB,GAAG,YACHC,OAAK,EACLT,UAAWC,IAAOS,KAClBC,gBAAiBV,IAAOW,WAJ1B,SAME,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBAEF,cAAC,IAAD,CACEN,GAAG,SACHC,OAAK,EACLT,UAAWC,IAAOS,KAClBC,gBAAiBV,IAAOW,WAJ1B,SAME,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,2B,mCCESZ,eAJS,SAAAC,GAAK,MAAK,CAChCC,gBAAiBC,IAAcC,mBAAmBH,MAGrCD,EAbA,SAAC,GAAD,IAAGE,EAAH,EAAGA,gBAAH,OACb,cAAC,IAAD,CAAW4B,SAAS,SAAShC,UAAWC,IAAOgC,OAA/C,SACE,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,IACC9B,EAAkB,cAAC,EAAD,IAAe,cAAC,EAAD,Y,eCazBF,eAJS,SAAAC,GAAK,MAAK,CAChCC,gBAAiBC,IAAcC,mBAAmBH,MAGrCD,EAlBM,SAAC,GAAD,IACRiC,EADQ,EACnBC,UACAhC,EAFmB,EAEnBA,gBACAiC,EAHmB,EAGnBA,WACGC,EAJgB,mEAMnB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACXpC,EAAkB,cAAC+B,EAAD,eAAeK,IAAY,cAAC,IAAD,CAAUhC,GAAI6B,WCalDnC,eAJS,SAAAC,GAAK,MAAK,CAChCC,gBAAiBC,IAAcC,mBAAmBH,MAGrCD,EAtBK,SAAC,GAAD,IACPiC,EADO,EAClBC,UACAhC,EAFkB,EAElBA,gBACAiC,EAHkB,EAGlBA,WACGC,EAJe,mEAMlB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACXpC,GAAmBkC,EAAWG,WAC5B,cAAC,IAAD,CAAUjC,GAAI6B,IAEd,cAACF,EAAD,eAAeK,WCZjBE,EAAWC,gBAAK,kBAAM,iCACtBC,EAAeD,gBAAK,kBAAM,uDAC1BE,EAAYF,gBAAK,kBAAM,uDACvBG,EAAeH,gBAAK,kBAAM,8DAE1BI,E,uKACJ,WACEC,KAAKR,MAAMS,qB,oBAGb,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IAEA,cAAC,WAAD,CAAUC,SAAU,4CAApB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAazC,OAAK,EAAC0C,KAAK,IAAIf,UAAWM,IACvC,cAAC,EAAD,CACES,KAAK,YACLV,YAAU,EACVJ,WAAW,YACXD,UAAWQ,IAEb,cAAC,EAAD,CACEO,KAAK,SACLV,YAAU,EACVJ,WAAW,YACXD,UAAWS,IAEb,cAAC,EAAD,CACEM,KAAK,YACLd,WAAW,SACXD,UAAWU,gB,GA5BPX,aAqCZpB,EAAqB,CACzBkC,iBAAkBhC,IAAemC,gBAGpBlD,cAAQ,KAAMa,EAAdb,CAAkC6C,G,kECvC3CM,GAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAM1DC,GAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGRC,GAAQC,YAAe,CAC3BC,QAAS,CACPC,KAAMC,YAAeR,GAAmBS,KACxCC,SAAUC,MAEZrB,cACAsB,UAAUC,IAKG,IAAET,SAAOU,UAFNC,YAAaX,K,cC9B/BY,IAASxC,OACP,cAAC,IAAMyC,WAAP,UACE,cAAC,IAAD,CAAUb,MAAOA,GAAMA,MAAvB,SACE,cAAC,IAAD,CAAac,QAAS,KAAMJ,UAAWV,GAAMU,UAA7C,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRK,SAASC,eAAe,U,yJClBpBC,EAAkBC,YAAa,wBAC/BC,EAAkBD,YAAa,wBAC/BE,EAAgBF,YAAa,sBAE7BG,EAAeH,YAAa,qBAC5BI,EAAeJ,YAAa,qBAC5BK,EAAaL,YAAa,mBAUjB,GACbD,kBACAE,kBACAC,gBACAI,cAZoBN,YAAa,sBAajCO,cAZoBP,YAAa,sBAajCQ,YAZkBR,YAAa,oBAa/BG,eACAC,eACAC,aACAI,sBAd4BT,YAAa,8BAezCU,sBAd4BV,YAAa,8BAezCW,oBAd0BX,YAAa,6B,eCZnCY,EAAmB,CAAE9E,KAAM,KAAM+E,MAAO,MAExCC,EAAOC,YAAcH,GAAD,mBACvBI,EAAYf,iBAAkB,SAACgB,EAAD,YAAMC,QAAsBJ,QADnC,cAEvBE,EAAYZ,cAAe,SAACa,EAAD,YAAMC,QAAsBJ,QAFhC,cAGvBE,EAAYT,eAAgB,kBAAMK,KAHX,cAIvBI,EAAYN,uBAAwB,SAACO,EAAD,YAAMC,WAJnB,IAOpBC,EAAQJ,YAAc,MAAD,mBACxBC,EAAYf,iBAAkB,SAACgB,EAAD,YAAMC,QAAsBC,SADlC,cAExBH,EAAYZ,cAAe,SAACa,EAAD,YAAMC,QAAsBC,SAF/B,cAGxBH,EAAYT,eAAgB,kBAAM,QAHV,IAMrBa,EAAW,SAACH,EAAD,YAAMC,SAEjBG,EAAQN,YAAc,MAAD,mBACxBC,EAAYd,cAAgBkB,GADJ,cAExBJ,EAAYX,WAAae,GAFD,cAGxBJ,EAAYR,YAAcY,GAHF,cAIxBJ,EAAYL,oBAAsBS,GAJV,IAOrBrG,EAAkBgG,aAAc,GAAD,mBAClCC,EAAYf,iBAAkB,kBAAM,KADF,cAElCe,EAAYZ,cAAe,kBAAM,KAFC,cAGlCY,EAAYN,uBAAwB,kBAAM,KAHR,cAIlCM,EAAYd,eAAgB,kBAAM,KAJA,cAKlCc,EAAYX,YAAa,kBAAM,KALG,cAMlCW,EAAYL,qBAAsB,GANA,cAOlCK,EAAYT,eAAgB,kBAAM,KAPA,IAUtBe,cAAgB,CAC7BR,OACA/F,kBACAoG,QACAE,U,0CCvCFE,IAAMC,SAASC,QAAU,wCAEzB,IAAMN,EAAQ,SACRA,GACFI,IAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDT,IAFtDA,EAAQ,WAKVI,IAAMC,SAASE,QAAQC,OAAOC,cAAgB,IA8FnC,GAAEC,SApFA,SAAAC,GAAW,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DAC9BD,EAASf,EAAYjB,mBADS,kBAILwB,IAAMU,KAAK,gBAAiBH,GAJvB,OAItBI,EAJsB,OAM5Bf,EAAUe,EAASC,KAAKhB,OACxBY,EAASf,EAAYf,gBAAgBiC,EAASC,OAPlB,gDAS5BJ,EAASf,EAAYd,cAAc,KAAMkC,UATb,yDAAJ,uDAoFDvG,OA5CZ,yDAAM,WAAMkG,GAAN,SAAAC,EAAA,6DACnBD,EAASf,EAAYV,iBADF,kBAIXiB,IAAMU,KAAK,iBAJA,OAMjBd,IACAY,EAASf,EAAYT,iBAPJ,gDASjBwB,EAASf,EAAYR,YAAY,KAAM4B,UATtB,yDAAN,uDA4CoBC,MAhErB,SAAAP,GAAW,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DAC3BD,EAASf,EAAYb,gBADM,kBAIFoB,IAAMU,KAAK,eAAgBH,GAJzB,OAInBI,EAJmB,OAMzBf,EAAUe,EAASC,KAAKhB,OACxBY,EAASf,EAAYZ,aAAa8B,EAASC,OAPlB,gDASzBJ,EAASf,EAAYX,WAAW,KAAM+B,UATb,yDAAJ,uDAgEiBrE,eAtBnB,yDAAM,WAAOgE,EAAUO,GAAjB,mBAAAN,EAAA,2DAGvBM,IADaC,EAFU,EAEzBtD,KAAQkC,MAFiB,wDAS3BA,EAAUoB,GAEVR,EAASf,EAAYP,yBAXM,kBAcFc,IAAMiB,IAAI,kBAdR,OAcnBN,EAdmB,OAgBzBH,EAASf,EAAYN,sBAAsBwB,EAASC,OAhB3B,kDAkBzBJ,EAASf,EAAYL,oBAAoB,KAAMyB,UAlBtB,0DAAN,0DC9ER,GAAEnH,mBAJU,SAAAH,GAAK,OAAIA,EAAMmE,KAAKlE,iBAIVgB,YAFjB,SAAAjB,GAAK,OAAIA,EAAMmE,KAAK6B,KAAKhF,Q,mBCD7C2G,EAAOC,QAAU,CAAC,IAAM,wBAAwB,KAAO,yBAAyB,WAAa,iC,mBCA7FD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,WAAa,8B,mBCA5DD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,OAAS,yBAAyB,KAAO,yB,+NCCtFC,EAAsB3C,YAAa,gCACnC4C,EAAsB5C,YAAa,gCACnC6C,EAAoB7C,YAAa,8BAEjC8C,EAAoB9C,YAAa,8BACjC+C,EAAoB/C,YAAa,8BACjCgD,EAAkBhD,YAAa,4BAE/BiD,EAAuBjD,YAClC,iCAEWkD,EAAuBlD,YAClC,iCAEWmD,EAAqBnD,YAAa,+BAElCoD,EAAepD,YAAa,yBCmC1B,GAAEqD,WArBf,SAAC,GAAD,IAAGvH,EAAH,EAAGA,KAAMwH,EAAT,EAASA,OAAT,OACA,SAAAvB,GACE,IAAMwB,EAAU,CAAEzH,OAAMwH,UAExBvB,EAASe,KAETvB,IACGU,KAAK,YAAasB,GAClBC,MAAK,gBAAGrB,EAAH,EAAGA,KAAH,OAAcJ,EAASgB,EAAkBZ,OAC9CsB,OAAM,SAAApC,GAAK,OAAIU,EAASiB,EAAgB3B,EAAMe,eAYxBsB,cATP,SAAAC,GAAS,OAAI,SAAA5B,GACjCA,EAASkB,KAET1B,IACGqC,OADH,oBACuBD,IACpBH,MAAK,kBAAMzB,EAASmB,EAAqBS,OACzCF,OAAM,SAAApC,GAAK,OAAIU,EAASoB,EAAmB9B,EAAMe,eAGVyB,cAxCtB,yDAAM,WAAM9B,GAAN,iBAAAC,EAAA,6DAC1BD,EAASY,KADiB,kBAKDpB,IAAMiB,IAAI,aALT,gBAKhBL,EALgB,EAKhBA,KAERJ,EAASa,EAAoBT,IAPL,gDASxBJ,EAASc,EAAkB,KAAMT,UATT,yDAAN,wD,QCXhB0B,EAAY,SAAAhJ,GAAK,OAAIA,EAAMsE,SAAS2E,QA0B3B,GACbD,YACAE,oBAb0BC,YAC1B,CAdqB,SAAAnJ,GAAK,OAAIA,EAAMsE,SAAS8E,OAc5BJ,IACjB,SAAC1E,EAAU2E,GACT,IAAMI,EAAmBJ,EAAOK,cAEhC,OAAOhF,EAAS2E,QAAO,qBAAGjI,KACnBsI,cAAcC,SAASF,U,uBCd5BD,EAAQnD,YAAc,IAAD,mBACxB6B,GAAsB,SAAC9H,EAAD,YAAUoG,WADR,cAExB6B,GAAoB,SAACjI,EAAD,OAAUoG,EAAV,EAAUA,QAAV,4BAA4BpG,GAA5B,CAAmCoG,OAF/B,cAGxBgC,GAAuB,SAACpI,EAAD,OAAUoG,EAAV,EAAUA,QAAV,OACtBpG,EAAMiJ,QAAO,qBAAGO,KAAgBpD,QAJT,IAOrB6C,EAAShD,YAAc,GAAD,eACzBqC,GAAe,SAACnC,EAAD,YAAMC,YAGlBG,EAAQN,YAAc,KAAM,IAEnBO,cAAgB,CAAE4C,QAAOH,SAAQ1C,W,mBCrBhDoB,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.1c4dba98.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\nimport styles from './Navigation.module.css';\nimport { Typography } from '@material-ui/core';\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav className={styles.nav}>\n    <NavLink\n      to=\"/\"\n      exact\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      <Typography variant=\"h6\">Home</Typography>\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        <Typography variant=\"h6\">Contacts</Typography>\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png';\nimport styles from './UserMenu.module.css';\nimport { Button } from '@material-ui/core';\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div className={styles.container}>\n    <img src={avatar} alt=\"\" width=\"32\" className={styles.avatar} />\n    <span className={styles.name}>Welcome, {name}</span>\n    <Button\n      type=\"button\"\n      variant=\"contained\"\n      color=\"default\"\n      onClick={onLogout}\n    >\n      Logout\n    </Button>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css';\nimport { Typography } from '@material-ui/core';\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      <Typography variant=\"h7\">Sign up</Typography>\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      <Typography variant=\"h7\">Sign in</Typography>\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Navigation from '../Navigation/Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav/AuthNav';\nimport { authSelectors } from '../../redux/auth';\nimport AppBarCss from '@material-ui/core/AppBar';\nimport { Toolbar } from '@material-ui/core';\nimport styles from './AppBar.module.css';\n\nconst AppBar = ({ isAuthenticated }) => (\n  <AppBarCss position=\"static\" className={styles.AppBar}>\n    <Toolbar>\n      <Navigation />\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </Toolbar>\n  </AppBarCss>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Container from './components/Container';\nimport AppBar from './components/AppBar/AppBar';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\"\n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './Common.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logOut, logIn, getCurrentUser };\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nexport default { getIsAuthenticated, getUsername };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__GXVVq\",\"link\":\"Navigation_link__303hc\",\"activeLink\":\"Navigation_activeLink__11SKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__cmpQy\",\"activeLink\":\"AuthNav_activeLink__2OxIN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__2gGsb\",\"avatar\":\"UserMenu_avatar__3fJ3F\",\"name\":\"UserMenu_name__1chCs\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contacts-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  // Async case\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  }\n\n  // axios\n  //   .get('/contacts')\n  //   .then(({ data }) => dispatch(fetchContactSuccess(data)))\n  //   .catch(error => dispatch(fetchContactError(error)));\n};\n\nconst addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contact = { name, number };\n\n    dispatch(addContactRequest());\n\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error.message)));\n  };\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nexport default { addContact, deleteContact, fetchContacts };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getFilter = state => state.contacts.filter;\n\nconst getAllContacts = state => state.contacts.items;\n\n// const getFilteredContacts = state => {\n//   const contacts = getAllContacts(state);\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n//С МЕМОИЗАЦИЕЙ\nconst getFilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport default {\n  getFilter,\n  getFilteredContacts,\n};\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n  fetchContactSuccess,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({ items, filter, error });\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1DBoJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__Ax8ja\"};"],"sourceRoot":""}