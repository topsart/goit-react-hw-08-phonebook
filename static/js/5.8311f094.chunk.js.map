{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactsList.js","components/Form/Form.js","components/Filter/Filter.js","views/ContactsView.js"],"names":["module","exports","connect","state","contacts","contactsSelectors","getFilteredContacts","dispatch","onDeleteContact","id","contactsOperations","deleteContact","Paper","className","styles","contacts_list_wrapper","List","contacts_list","map","name","number","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","IconButton","edge","aria-label","onClick","Form","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","find","contact","alert","reset","form","TextField","form_item","onChange","this","type","label","title","required","variant","Button","color","Component","addContact","getFilter","changeFilter","target","search","searchIcon","InputBase","inputInput","placeholder","Contacts","fetchContacts"],"mappings":"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","file":"static/js/5.8311f094.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_list_wrapper\":\"ContactsList_contacts_list_wrapper__ng8bT\",\"contacts_list\":\"ContactsList_contacts_list__1Le2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1Yzrj\",\"form_item\":\"Form_form_item__bSnK7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Filter_search__317Yb\",\"searchIcon\":\"Filter_searchIcon__3zjwB\",\"inputInput\":\"Filter_inputInput__1y4Fc\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport styles from './ContactsList.module.css';\nimport { Paper } from '@material-ui/core';\nimport { List } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport PhoneAndroid from '@material-ui/icons/PhoneAndroid';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => (\n  <Paper className={styles.contacts_list_wrapper}>\n    <List className={styles.contacts_list}>\n      {contacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <ListItemAvatar>\n            <Avatar>\n              <PhoneAndroid />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={name} secondary={number} />\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => onDeleteContact(id)}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </ListItem>\n      ))}\n    </List>\n  </Paper>\n);\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport shortid from 'shortid';\nimport styles from './Form.module.css';\nimport { Paper } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { contacts, onSubmit } = this.props;\n    const { name, number } = this.state;\n\n    contacts.find(contact => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : contacts.find(contact => contact.number === number)\n      ? alert(`${number} is already in contacts`)\n      : onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <Paper className={styles.form}>\n        <TextField\n          className={styles.form_item}\n          onChange={this.handleChange}\n          value={this.state.name}\n          id={this.nameInputId}\n          name=\"name\"\n          type=\"text\"\n          label=\"Full Name\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          variant=\"outlined\"\n        />\n        <TextField\n          className={styles.form_item}\n          onChange={this.handleChange}\n          value={this.state.number}\n          id={this.numberInputId}\n          name=\"number\"\n          type=\"tel\"\n          label=\"Phone Number\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          variant=\"outlined\"\n        />\n        <Button\n          className={styles.form_item}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={this.handleSubmit}\n        >\n          Add contact\n        </Button>\n      </Paper>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './Filter.module.css';\nimport shortid from 'shortid';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst nameInputId = shortid.generate();\n\nconst Filter = ({ value, onChange }) => (\n  <div className={styles.search}>\n    <div className={styles.searchIcon}>\n      <SearchIcon />\n    </div>\n    <InputBase\n      className={styles.inputInput}\n      color=\"secondary\"\n      placeholder=\"Search contacts...\"\n      id={nameInputId}\n      value={value}\n      onChange={onChange}\n    />\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ContactsList from '../components/ContactsList';\nimport Form from '../components/Form';\nimport Filter from '../components/Filter';\nimport { contactsOperations } from '../redux/contacts';\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <>\n        <Form onSubmit={this.addContact} />\n        <div>\n          <Filter />\n          <ContactsList />\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(null, mapDispatchToProps)(Contacts);\n"],"sourceRoot":""}